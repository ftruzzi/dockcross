name: Dockcross CI

on:
  workflow_dispatch:

jobs:
  base:
    name: base
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: build
        run: make base

      - name: test
        run: make base.test

      - name: archive base
        run: |
          mkdir -p cache
          docker save dockcross/base:latest | xz -e9 -T0 > ./cache/base.tar.xz

      - name: save base
        uses: actions/upload-artifact@v3
        with:
          name: cache
          path: ./cache
          retention-days: 1

  image:
    name: ${{ matrix.arch_name.image }}
    needs: base
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch_name:
          - {
              image: "manylinux2014-aarch64",
              stockfish: "no",
              stockfish_arg: "",
              ninja: "no",
              ninja_arg: "",
              openssl: "yes",
              openssl_arg: "linux-aarch64",
              C: "no",
              C_arg: "",
              C-Plus-Plus: "no",
              C-Plus-Plus_arg: "",
              fmt: "no",
              fmt_arg: "",
              cpython: "yes",
              cpython_arg: "",
            }
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        with:
          submodules: "recursive"
          fetch-depth: 1

      - uses: actions/download-artifact@v3
        with:
          name: cache
          path: ./cache

      - name: load base
        run: xz -d -k < ./cache/base.tar.xz | docker load

      - name: build
        run: make ${{ matrix.arch_name.image }}

      - name: basic test
        run: make ${{ matrix.arch_name.image }}.test

      # Updated on 19/05/2022
      - name: stockfish build test
        if: ${{ matrix.arch_name.stockfish == 'yes' }}
        run: |
          git clone --depth 1 --branch sf_15 https://github.com/official-stockfish/Stockfish.git
          cd Stockfish/src
          ./../../tools/dockcross-make-builder.sh ${{ matrix.arch_name.image }} net
          ./../../tools/dockcross-make-builder.sh ${{ matrix.arch_name.image }} build ${{ matrix.arch_name.stockfish_arg }} -j2
          cd ../..
          rm -rf Stockfish
      # Updated on 19/05/2022

      - name: ninja build test
        if: ${{ matrix.arch_name.ninja == 'yes' }}
        run: |
          git clone --depth 1 --branch v1.11.0 https://github.com/ninja-build/ninja.git
          cd ninja
          ./../tools/dockcross-cmake-builder.sh ${{ matrix.arch_name.image }} ${{ matrix.arch_name.ninja_arg }}

      # Updated on 19/05/2022
      - name: openssl build test
        if: ${{ matrix.arch_name.openssl == 'yes' }}
        run: |
          git clone --depth 1 --branch OpenSSL_1_1_1o https://github.com/openssl/openssl.git
          cd openssl
          wget https://raw.githubusercontent.com/mavlink/MAVSDK/main/third_party/openssl/dockcross-android.patch
          patch -p 0 < dockcross-android.patch
          ./../tools/dockcross-command.sh ${{ matrix.arch_name.image }} ./Configure ${{ matrix.arch_name.openssl_arg }}
          ./../tools/dockcross-make-builder.sh ${{ matrix.arch_name.image }} -j2
          cd ..
          rm -rf openssl

      # Updated on 19/05/2022
      - name: C build test
        if: ${{ matrix.arch_name.C == 'yes' }}
        run: |
          git clone https://github.com/TheAlgorithms/C.git
          cd C
          git checkout 2314a195862243e09c485a66194866517a6f8c31
          ./../tools/dockcross-cmake-builder.sh ${{ matrix.arch_name.image }} ${{ matrix.arch_name.C_arg }}
          cd ..
          rm -rf C

      # Updated on 19/05/2022
      - name: C-Plus-Plus build test
        if: ${{ matrix.arch_name.C-Plus-Plus == 'yes' }}
        run: |
          git clone https://github.com/TheAlgorithms/C-Plus-Plus.git
          cd C-Plus-Plus
          git checkout 37a29008e6b77921a97a89ca8b7fd9e700aeccd0
          ./../tools/dockcross-cmake-builder.sh ${{ matrix.arch_name.image }} ${{ matrix.arch_name.C-Plus-Plus_arg }}
          cd ..
          rm -rf C-Plus-Plus

      # Updated on 19/05/2022
      - name: fmt build test
        if: ${{ matrix.arch_name.fmt == 'yes' }}
        run: |
          git clone --depth 1 --branch 8.1.1 https://github.com/fmtlib/fmt.git
          cd fmt
          ./../tools/dockcross-cmake-builder.sh ${{ matrix.arch_name.image }} ${{ matrix.arch_name.fmt_arg }} -DFMT_DOC=OFF
          cd ..
          rm -rf fmt

      # Updated on 19/05/2022
      - name: cpython build test
        if: ${{ matrix.arch_name.cpython == 'yes' }}
        run: |
          git clone --depth 1 --branch v3.9.13 https://github.com/python/cpython.git
          cd cpython
          ./../tools/dockcross-command.sh ${{ matrix.arch_name.image }} ./configure ac_cv_file__dev_ptmx=no ac_cv_file__dev_ptc=no --disable-ipv6 ${{ matrix.arch_name.cpython_arg }} --build=x86_64-linux-gnu --enable-shared
          ./../tools/dockcross-make-builder.sh ${{ matrix.arch_name.image }} -j2
          cd ..
          rm -rf cpython

      # Updated on 31/3/2022
      - name: mbedtls build test
        if: ${{ matrix.arch_name.mbedtls == 'yes' }}
        run: |
          git clone --depth 1 --branch archive/baremetal https://github.com/Mbed-TLS/mbedtls.git
          cd mbedtls
          ./../tools/dockcross-command.sh ${{ matrix.arch_name.image }} scripts/config.pl baremetal
          ./../tools/dockcross-cmake-builder.sh ${{ matrix.arch_name.image }} ${{ matrix.arch_name.fmt_arg }} 
          cd ..
          rm -rf mbedtls

      # Updated on 20/6/2022
      - name: libopencm3 build test
        if: ${{ matrix.arch_name.libopencm3 == 'yes' }}
        run: |
          git clone https://github.com/libopencm3/libopencm3.git
          cd libopencm3
          git checkout 467522778329d6f41781a6c951b77d6ff6744de6
          ./../tools/dockcross-make-builder.sh ${{ matrix.arch_name.image }} "PREFIX=/usr/xcc/arm-none-eabi/bin/arm-none-eabi- \
                                                                              TARGETS='stm32/f1 stm32/f2 stm32/f3 stm32/f4 stm32/f7 \
                                                                              stm32/l1 stm32/l4 stm32/g4 stm32/h7 gd32/f1x0 lpc13xx \
                                                                              lpc17xx lpc43xx/m4 lm3s lm4f msp432/e4 efm32/tg efm32/g \
                                                                              efm32/lg efm32/gg efm32/wg efm32/ezr32wg nrf/51 nrf/52 \
                                                                              sam/3a sam/3n sam/3s sam/3u sam/3x sam/4l vf6xx pac55xx' \
                                                                              -j`nproc`"
          cd ..
          rm -rf libopencm3